#!/usr/bin/env bash
cd /tmp
if [ -f /tmp/lxdm-0.5.3.tar.xz ]
then
	tar xf lxdm-0.5.3.tar.xz ; cd lxdm-0.5.3
else
	wget -c https://downloads.sourceforge.net/lxdm/lxdm-0.5.3.tar.xz
	tar xf lxdm-0.5.3.tar.xz ; cd lxdm-0.5.3
fi

./configure --prefix=/usr --sysconfdir=/etc --with-pam --with-systemdsystemunitdir=no
make
make install

echo '#!/bin/sh

# Largely adapted from xdm init script:
# Copyright 1998-2002, 2004, 2005 Branden Robinson <branden@debian.org>.
# Copyright 2006 Eugene Konev <ejka@imfi.kspu.ru>
#
# This is free software; you may redistribute it and/or modify
# it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2,
# or (at your option) any later version.
#
# This is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License with
# the Debian operating system, in /usr/share/common-licenses/GPL;  if
# not, write to the Free Software Foundation, Inc., 51 Franklin Street, 
# Fifth Floor, Boston, MA 02110-1301, USA.

### BEGIN INIT INFO
# Provides:          lxdm
# Should-Start:      $named console-screen dbus acpid hal consolekit
# Required-Start:    $local_fs $remote_fs x11-common
# Required-Stop:     $local_fs $remote_fs
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: LXDE Display Manager (LXDM)
# Description:       Debian init script for the LXDE Display Manager
### END INIT INFO

set -e

HEED_DEFAULT_DISPLAY_MANAGER=
# To start lxdm even if it is not the default display manager, change
# HEED_DEFAULT_DISPLAY_MANAGER to "false."
# Also overridable from command line like:
# HEED_DEFAULT_DISPLAY_MANAGER=false /etc/init.d/lxdm start
[ -z "$HEED_DEFAULT_DISPLAY_MANAGER" ] && HEED_DEFAULT_DISPLAY_MANAGER=true

DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DAEMON=/usr/sbin/lxdm-binary
PIDFILE=/var/run/lxdm.pid

if [ -r /etc/default/locale ]; then
  . /etc/default/locale
  export LANG LANGUAGE
fi

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

SSD_START_ARGS="--pidfile $PIDFILE --name $(basename $DAEMON) --startas $DAEMON -- -d"
SSD_STOP_ARGS="--pidfile $PIDFILE --name $(basename $DAEMON) --retry TERM/5/TERM/5"

case "$1" in
  start)
    if [ "$HEED_DEFAULT_DISPLAY_MANAGER" = "true" ] &&
       [ -e $DEFAULT_DISPLAY_MANAGER_FILE ] &&
       [ "$(cat $DEFAULT_DISPLAY_MANAGER_FILE)" != "/usr/sbin/lxdm" ]; then
      echo "Not starting X display manager (lxdm); it is not the default" \
        "display manager."
    else
      log_daemon_msg "Starting X display manager" "lxdm"
      start-stop-daemon --start --quiet $SSD_START_ARGS \
        || log_progress_msg "already running"
      log_end_msg 0
    fi
  ;;

  restart)
    [ -f $PIDFILE ] && /etc/init.d/lxdm stop
    [ -f $PIDFILE ] && exit 1
    /etc/init.d/lxdm start
  ;;

  stop)
    log_daemon_msg "Stopping X display manager" "lxdm"
    if ! [ -f $PIDFILE ]; then
      log_progress_msg "not running ($PIDFILE not found)"
    else
      start-stop-daemon --stop --quiet $SSD_STOP_ARGS
      SSD_RES=$?
      if [ $SSD_RES -eq 1 ]; then
        log_progress_msg "not running"
      fi
      if [ $SSD_RES -eq 2 ]; then
        log_progress_msg "not responding to TERM signals"
      else
	if [ -f $PIDFILE ]; then
	  log_progress_msg "(removing stale $PIDFILE)"
	  rm $PIDFILE
	fi
      fi
    fi
    log_end_msg 0
  ;;
  force-reload)
    /etc/init.d/lxdm restart
  ;;

  status)
    status_of_proc -p $PIDFILE $DAEMON lxdm
  ;;

  *)
    echo "Usage: /etc/init.d/lxdm {start|stop|restart|force-reload}"
    exit 1
    ;;
esac

exit 0' | sudo tee /etc/init.d/lxdm
chmod a+o+x /etc/init.d/lxdm

echo '$x-display-manager	lxdm' | sudo tee /etc/insserv.conf.d/lxdm

echo '/var/log/lxdm.log {
    missingok
    notifempty
    copytruncate
}' | sudo tee /etc/logrotate.d/lxdm

echo '#%PAM-1.0
# Comments stolen from lightdm-pam-file
# Block login if they are globally disabled
auth    requisite       pam_nologin.so

# Load environment from /etc/environment and ~/.pam_environment
auth    required        pam_env.so readenv=1
auth    required        pam_env.so readenv=1 envfile=/etc/default/locale
auth    required        pam_env.so readenv=1 envfile=/etc/lxdm-environment

# auth    sufficient      pam_succeed_if.so user ingroup nopasswdlogin
@include common-auth
auth    optional        pam_gnome_keyring.so
@include common-account

# SELinux needs to be the first session rule. This ensures that any
# lingering context has been cleared. Without out this it is possible
# that a module could execute code in the wrong domain.
# When the module is present, "required" would be sufficient (When SELinux
# is disabled, this returns success.)
#
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so close

session required       pam_unix.so 	  # added by klaumi
session required        pam_limits.so
session required       pam_loginuid.so 	  # added by klaumi
# @include common-session-noninteractive  # commented out by klaumi
@include common-session 		  # added by klaumi

# SELinux needs to intervene at login time to ensure that the process
# starts in the proper default security context. Only sessions which are
# intended to run in the users context should be run after this.
# When the module is present, "required" would be sufficient (When SELinux
# is disabled, this returns success.)
#
session [success=ok ignore=ignore module_unknown=ignore default=bad] pam_selinux.so open

session optional        pam_gnome_keyring.so auto_start

session optional        pam_systemd.so

@include common-password' | sudo tee /etc/pam.d/lxdm

echo '#
# /etc/pam.d/common-session - session-related modules common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of modules that define tasks to be performed
# at the start and end of sessions of *any* kind (both interactive and
# non-interactive).
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
session	[default=1]			pam_permit.so
# here s the fallback if no module succeeds
session	requisite			pam_deny.so
# prime the stack with a positive return value if there isnt one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
session	required			pam_permit.so
# and here are more per-package modules (the "Additional" block)
session	required	pam_unix.so 
session	optional	pam_mount.so 
session	optional			pam_elogind.so 
session	optional	pam_cgfs.so -c freezer,memory,name=systemd
# end of pam-auth-update config
session optional        pam_loginuid.so' | sudo tee /etc/pam.d/common-session

#Nota el paquete lxdm del repositorio siempre da problema :
#dpkg: error al procesar el paquete lxdm (--configure):
# el subproceso instalado el script post-installation devolvió el código de salida de error 1
#Desinstalando lxdm (0.5.3-2) ...
#WARN: clearing dangling symlink /etc/systemd/system/display-manager.service
#
#A veces es posible borrar el archivo que da el problema :
#su -c "rm -rf /var/lib/dpkg/info/lxdm*.postinst
#dpkg --configure lxdm
#
#Pero no es seguro que funcione siempre

echo '/usr/sbin/lxdm' | sudo tee /etc/X11/default-display-manager
echo 'GDK_CORE_DEVICE_EVENTS=true' | sudo tee /etc/lxdm-environment
sudo invoke-rc.d dbus reload || true
sudo update-alternatives --install /etc/lxdm/default.conf lxdm.conf /etc/lxdm/lxdm.conf 50
sudo rc-update add lxdm default

echo '
Copia y pega lo siguiente en una terminal :

echo '"'[Desktop]
Session=xfce
Language=es_ES.utf8
Layout=es'"' | tee ~/.dmrc
'

usermod --shell /sbin/nologin vboxadd
usermod --shell /sbin/nologin ftpuser