#!/usr/bin/env playonlinux-bash
[ "$PLAYONLINUX" = "" ] && exit 0
source "$PLAYONLINUX/lib/sources"
export WINEPREFIX="$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness"
export WINEDEBUG="-all"
MD5SUM=$(whereis -B "/usr/sbin" "/usr/local/sbin" "/sbin" "/usr/bin" "/usr/local/bin" "/bin" -b md5sum	| grep -i "md5sum" | cut -d " " -f02)
MD5SUM=$(echo $MD5SUM | awk -F'/' '/^/ { print $4 }')
SOFTWARE="MMM1CE"
TITULO="Microsoft Midtown Madness 1 Chicago Edition"
RUTA_DEL_PREFIJO="$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness"
RUTA_DEL_SOFTWARE="$RUTA_DEL_PREFIJO/drive_c/Inukaze/Videojuegos/Abandonware/Windows/MidtownMadness1ChicagoEdition/"
RUTA_SYSTEM32="$RUTA_DEL_PREFIJO/drive_c/windows/system32/"
RUTA_SYSWOW64="$RUTA_DEL_PREFIJO/drive_c/windows/syswow64/"
VERSION_WINE=$(cat "$RUTA_DEL_PREFIJO/playonlinux.cfg" | grep VERSION= | sed 's/VERSION.//')

echo '
Autor ----------------> Inukaze ( Venezuela )
Sitio ----------------> https://goo.gl/ij6WqW
Correo-E -------------> bloginukaze@gmail.com
Licencia -------------> GPL 2

******* Inicio : Acerca de este Script ********
				  
  Yo intento escribir scripts compatibles con
   sistemas operativos Unix & POSIX , y otros
   sistemas operativos que soporten versiones
   De la API "Wine ITS NOT EMULATOR" , este
   nombre es un Acronimo y traducido al 
   espaÃ±ol es "Wine NO ES UN EMUALDOR"
   mejor conocida como "W.i.n.e"
   
  Basicamene la funcion de Wine es traducir
   mediante capas de abstraccion cosas hechas
   para que funcionen nativamente en sistemas
   Microsoft como MS-D.o.s & Windows para ser
   Ejecutados "Como Nativo" de Sistemas POSiX
   Sin la necesidad de tener instalado ningun
   Sistema Operativo Microsoft.

  Este es mi adaptacion para compatibilidad
  Con el gestor de varias versiones de Wine
  Conocido como "PlayOn(Linux/Mac)" .
  
  Para ofrecer mayor comodidad con los juegos
  Autocontenidos que poseeo.

******** Fin : Acerca de este Script **********

Comenzando ---> '$TITULO'
'

# Solucion de Resolucion
echo `xrandr --current | grep current | awk '{print $8}'` >> /tmp/ancho
echo `xrandr --current | grep current | awk '{print $10}'` >> /tmp/alto
cat /tmp/alto | sed -i 's/,//g' /tmp/alto
ANCHO=$(cat /tmp/ancho)
ALTO=$(cat /tmp/alto)
rm /tmp/ancho /tmp/alto
echo "$ANCHO"'x'"$ALTO" >> /tmp/Resolucion
Resolucion=$(cat /tmp/Resolucion)
rm /tmp/Resolucion
# Solucion de Resolucion

# Obtener el nombre del nucleo del sistema
Nucleo=$(uname -s)
case "$Nucleo" in
	Linux)		Nucleo="linux"						;;
	FreeBSD)	Nucleo="freebsd"					;;
	GNU/kFreeBSD)	Nucleo="freebsd"					;;
	* ) echo "Tu Sistema Operativo -> NO ESTA SOPORTADO"			;;
esac

# Determinando la arquitectura de la maquina
#Arquitectura=$(uname -m)
Arquitectura=$(cat "$RUTA_DEL_PREFIJO/playonlinux.cfg" | grep ARCH= | sed 's/ARCH.//')
case "$Arquitectura" in
    x86)	Arquitectura="x86"					;;
    i?86)	Arquitectura="x86"					;;
    amd64)	Arquitectura="amd64"					;;
    x86_64)	Arquitectura="amd64"					;;
* ) echo    "Tu Arquitectura '$Arquitectura' -> NO ESTA SOPORTADA."	;;
esac

	if [ $Arquitectura = "x86" ]; then
		RUTA_WINE="$HOME/.PlayOnLinux/wine/$Nucleo-$Arquitectura/$VERSION_WINE"
		PATH="$RUTA_WINE/bin:$PATH"
		export WINESERVER="$RUTA_WINE/bin/wineserver"
		export WINELOADER="$RUTA_WINE/bin/wine"
		export WINEDLLPATH="$RUTA_WINE/lib"
		export WINEPREFIX="$RUTA_DEL_PREFIJO"
export WINEDEBUG="-all"
		export WINEDLLOVERRIDES=mshtml=wine cmd echo test
		echo
		export LD_PRELOAD="libpthread.so.0 libGL.so.1" ; echo "PreIniciando : libpthread.so.0 libGL.so.1"
		export __GL_SYNC_TO_VBLANK=0 ; echo "Sincronizacion Vertical = DesActiva"
		export __GL_YIELD="NOTHING" ; echo "Sometimiento GL : Ninguno"
		echo

		if [[ $VERSION_WINE =~ "CSMT" ]]
			then
				echo
				export CSMT=enable ; echo "CSMT Activado"
				echo				
		fi
		Arquitectura="32 Bits"

	elif [ $Arquitectura = "amd64" ]; then
		RUTA_WINE="$HOME/.PlayOnLinux/wine/$Nucleo-$Arquitectura/$VERSION_WINE"
		PATH="$RUTA_WINE/bin:$PATH"
		export WINESERVER="$RUTA_WINE/bin/wineserver"
		export WINELOADER="$RUTA_WINE/bin/wine"
		export WINEDLLPATH="$RUTA_WINE/lib"
		export WINEPREFIX="$RUTA_DEL_PREFIJO"
export WINEDEBUG="-all"
		export WINEDLLOVERRIDES=mshtml=wine cmd echo test
		echo
		export LD_PRELOAD="libpthread.so.0 libGL.so.1" ; echo "PreIniciando : libpthread.so.0 libGL.so.1"
		export __GL_SYNC_TO_VBLANK=0 ; echo "Sincronizacion Vertical = DesActiva"
		export __GL_YIELD="NOTHING" ; echo "Sometimiento GL : Ninguno"
		echo
		Arquitectura="64 Bits"

		if [[ $VERSION_WINE =~ "CSMT" ]]
			then
				echo
				export CSMT=enable ; echo "CSMT Activado"
				echo
		fi
	else
		echo "Arquitectura NO SOPORTADA"
		exit 1
	fi 

# Muestra en la terminal La arquitectura &
# La version especifica de Wine usada
VERSION_WINE=$(wine --version)
echo ""
echo ""
echo "Corriendo '$VERSION_WINE' en '$Nucleo' ( Maquina de '$Arquitectura' )"

# Comprobrar que (No/)Existen los archivos y rutas, antes de proceder
if test -d "$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness"
	then
	echo
			if test -f "$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness/drive_c/Inukaze/Videojuegos/Abandonware/Windows/MidtownMadness1ChicagoEdition/midtown.exe"
			then
				echo "Encontrado ejecutable de Midtown Madness 1 Chicago Edition en el prefijo de Inukaze"
			fi		
	else
		echo "Midtown Madness no esta instalado en el Prefijo de Inukaze"
		xmessage -timeout 3 "Midtown Madness no esta instalado en el Prefijo de Inukaze"
		exit 1
fi

if test -f "$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness/playonlinux.cfg"
	then
	# Obtener la version de WINE y su arquitectura del Prefijo Steam dentro de PlayOnLinux ;
	VERSION_WINE=$(cat "$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness/playonlinux.cfg" | grep VERSION= | sed 's/VERSION=//g')
	ARQUITECTURA_WINE=$(cat "$HOME/.PlayOnLinux/wineprefix/InukazeMidtownMadness/playonlinux.cfg" | grep ARCH= | sed 's/ARCH=//g')
	else
		echo "Steam no esta instalado en el Prefijo Predeterminado"
		xmessage -timeout 3 "Steam no esta instalado en el Prefijo Predeterminado"
		exit 1
fi

# Modo Ventana/Pantalla Completa :
echo "REGEDIT4" >> /tmp/modo_ventana.reg
echo "" >> /tmp/modo_ventana.reg
echo "[HKEY_CURRENT_USER\Software\Wine\Explorer]" >> /tmp/modo_ventana.reg
echo '"Desktop"="Default"' >> /tmp/modo_ventana.reg
echo "" >> /tmp/modo_ventana.reg
echo "[HKEY_CURRENT_USER\Software\Wine\Explorer\Desktops]" >> /tmp/modo_ventana.reg

# Para Activar el Modo Ventana :
echo '"Default"'='"'"640x480"'"' >> /tmp/modo_ventana.reg

# Para DesActivar el Modo Ventana :
#echo '"Default"'='"'""'"' >> /tmp/modo_ventana.reg

regedit -s /tmp/modo_ventana.reg
rm -rf /tmp/modo_ventana.reg
2>/dev/null 1>/dev/null killall -9 services.exe winedevice.exe plugplay.exe explorer.exe &> /dev/null


# Ejecutando Programa / Software / Juego
echo
echo "Informacion :"
echo "Arquitectura -> `uname -m` ($Arquitectura) "
echo "DEBUG	-> $WINEDEBUG "
echo "Prefijo	-> $WINEPREFIX"
echo "Cargador -> $WINELOADER"
echo "Servidor -> $WINESERVER"
echo ""
echo ""

	sleep 1
	cd "$RUTA_DEL_SOFTWARE"

	#Esto lo agregare para mi debido a que cuando cambio
	#a Ciertas Resoluciones me muestra "Entrada No Adm."
	#y no tengo idea de como bloquearlas , para que cambie
	#A Resoluciones que si sirvan y no muestren eso.

	# Solo deja la linea asi : 
	# $(xrandr -s 800x600 -r 79)

	#$(xrandr -s 800x600) #-r 79)

	echo "Ejecutando el Software"
	echo "$SOFTWARE"
	EJECUTABLE=$( ls midtown.exe ) 
	exec xinit "$RUTA_WINE/bin/wine" midtown.exe "$@" -- :1 vt6 -ac -depth 16 &

	# Esperar que "Midtown Madness" Inicie
	until pids=$(pidof midtown.exe)
	do   
	    sleep 1
	done

	# Cuando "midtown.exe" haya sido iniciado
	# Cambiar la resolucion de la tty6 en 640x480
	for pid in $pids
	do        
	    DISPLAY=:1 /usr/bin/xrandr -s 640x480
	done
	
	sleep 2
	EJECUTABLEPID=$(pidof $EJECUTABLE)
	taskset -p 0xFFFFFFFF $EJECUTABLEPID

	while Launchers=$( pidof "midtown.exe" )
		do   
			sleep 1	
		done
	
			#RestaurarResolucion=$(xrandr -s $Resolucion)
			#2>/dev/null 1>/dev/null killall -9 pulseaudio "$EJECUTABLE" pulseaudio plugplay.exe winedevice.exe services.exe explorer.exe wineserver &> /dev/null
			
exit 0
